{"version":3,"sources":["Firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","Reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","seed","setSeed","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","message","displayName","onChange","e","target","type","placeholder","onClick","preventDefault","console","log","add","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","variant","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.546b89f5.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDzeP-5S2bid9sN_HBXQZp7810OYxh7OkY\",\n  authDomain: \"uniletsbefd-98.firebaseapp.com\",\n  databaseURL: \"https://uniletsbefd-98-default-rtdb.firebaseio.com\",\n  projectId: \"uniletsbefd-98\",\n  storageBucket: \"uniletsbefd-98.appspot.com\",\n  messagingSenderId: \"692444421334\",\n  appId: \"1:692444421334:web:f290addc9845cc5f01bd77\",\n  measurementId: \"G-EGYHWSZ0KC\"\n};\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export{ auth, provider };\n  export default db;","import React, {createContext, useContext, useReducer} from 'react';\n\nexport const StateContext = createContext();\nexport const StateProvider = ({\n    reducer, initialState, children}) => (\n        <StateContext.Provider value = {useReducer(reducer, initialState)}>\n            {children}\n        </StateContext.Provider>\n    );\n\nexport const useStateValue = () => useContext(StateContext);\n\n\n","import { Avatar, IconButton } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport db from './Firebase';\nimport { useStateValue } from './StateProvider';\nimport firebase from \"firebase\";\n\nfunction Chat() {\n\n    const [seed, setSeed] = useState('');\n    const [input, setInput] = useState('');\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{  user  }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection(\"rooms\")\n              .doc(roomId)\n              .onSnapshot((snapshot) =>\n                snapshot.data() != null\n                  ? setRoomName(snapshot.data().name)\n                  : setRoomName()\n              );\n\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\")\n                .orderBy(\"timestamp\", 'asc').onSnapshot((snapshot) =>\n                    setMessages(snapshot.docs.map((doc) => doc.data())));\n        }\n\n    }, [roomId])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomId])\n\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log(\"You typed >>>>>>\", input);\n\n        db.collection(\"rooms\").doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setInput('');\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat_header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n\n                <div className=\"chat_headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>\n                        last seen{\" \"}\n                        {new Date(messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}\n                    </p>\n                </div>\n                <div className=\"chat_headerRight\">\n                    <IconButton><SearchIcon /></IconButton>\n                    <IconButton><AttachFileIcon /></IconButton>\n                    <IconButton><MoreVertIcon /></IconButton>\n                </div>\n            </div>\n            <div className=\"chat_body\">\n                {messages.map((message) => (\n                    <p className={`chat_message ${message.name === user.displayName && 'chat_receiver'} `}>\n                        <span className=\"chat_name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat_timestamp\">\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\n                        </span>\n                    </p>\n                ))}\n            </div>\n            <div className=\"chat_footer\">\n                <IconButton><InsertEmoticonIcon /></IconButton>\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\n                    <button onClick={sendMessage} type=\"submit\" >Send a message</button>\n                </form>\n                <IconButton><MicIcon /></IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","import \"./SidebarChat.css\";\nimport React, { useEffect, useState } from 'react'\nimport { Avatar } from \"@material-ui/core\";\nimport db from './Firebase.js';\nimport { Link } from \"react-router-dom\";\n\nfunction SidebarChat({ id, name, addNewChat }) {\n\n    const [seed, setSeed] = useState('');\n    const [messages, setMessages] = useState('');\n\n    useEffect(() =>{\n        if(id) {\n            db.collection(\"rooms\").doc(id).collection('messages')\n            .orderBy(\"timestamp\", 'desc')\n            .onSnapshot((snapshot) => (\n                setMessages(snapshot.docs.map((doc) => doc.data()))\n            ));\n        }\n    }, [id]);\n\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [])\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for chat room\");\n        if (roomName) {\n            // do some clever database stuff\n            db.collection('rooms').add({\n                name: roomName,\n            });\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"sidebarChat_info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n    ) : (\n            <div onClick={createChat} className=\"sidebarChat\">\n                <h2>Add new Chat</h2>\n            </div>\n        );\n}\n\nexport default SidebarChat\n","import React, { useEffect, useState } from 'react'\nimport './Sidebar.css'\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SidebarChat from './SidebarChat';\nimport db from './Firebase';\nimport { useStateValue } from './StateProvider';\n\nfunction Sidebar() {\n\n    const [rooms, setRooms] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\n            setRooms(snapshot.docs.map(doc =>({\n                id: doc.id,\n                data: doc.data(),\n            })))\n        ));\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar_headerRight\">\n                    <IconButton><DonutLargeIcon /></IconButton>\n                    <IconButton><ChatIcon /></IconButton>\n                    <IconButton><MoreVertIcon /></IconButton>\n\n                </div>\n            </div>\n            <div className=\"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                    <SearchIcon />\n                    <input type=\"text\" placeholder=\"Search or start a new chat\" />\n                </div>\n\n            </div>\n            <div className=\"sidebar_chats\">\n                <SidebarChat addNewChat/>\n                {rooms.map(room =>(\n                    <SidebarChat key={room.id} id={room.id}\n                    name={room.data.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","export const initialState = {\n    user: null,\n};\n\nexport const actionTypes ={\n    SET_USER: \"SET_USER\"\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return{\n                ...state,\n                user: action.user,\n            };\n        default:\n            return state;   \n    }\n};\n\nexport default reducer;","import React from 'react';\nimport './Login.css';\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from './Firebase';\nimport { useStateValue } from './StateProvider';\nimport { actionTypes } from './Reducer';\n\nfunction Login() {\n\n    const [{}, dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user,\n                })\n            })\n            .catch((error) => alert(error.message));\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login_container\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\" alt=\"\" />\n                <div className=\"login_text\">\n                    <h1>Sign in to WhatsApp</h1>\n                </div>\n                <Button variant=\"contained\"  type=\"submit\" onClick={signIn} >Sign in with Google</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n\n\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n\n      {!user ? (\n        <Login/>\n      ) : (\n          <div className=\"app_body\">\n            <Router>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/rooms/:roomId\">\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                  <Chat />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './Reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider\n     initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}